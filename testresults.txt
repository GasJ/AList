parameterTest
WE WILL TEST THE ABILITY OF THE LIST FUNCTIONS TO DETERMINE INVALID PARAMETER.
we will use assert and if nothing's up, the test past.
only test those functions need argument(s)
testing ListCount argument determine
testing ListCount argument determine pasted
testing ListFirst argument determine
testing ListFirst argument determine pasted
testing ListLast argument determine
testing ListLast argument determine pasted
testing ListNext argument determine
testing ListNext argument determine pasted
testing ListPrev argument determine
testing ListPrev argument determine pasted
testing ListCurr argument determine
testing ListCurr argument determine pasted
testing ListSearch argument determine
testing ListSearch argument determine pasted
testing ListAdd argument determine
testing ListAdd argument determine pasted
testing ListInsert argument determine
testing ListInsert argument determine pasted
testing ListAppend argument determine
testing ListAppend argument determine pasted
testing ListPrepend argument determine
testing ListPrepend argument determine pasted
testing ListRemove argument determine
testing ListRemove argument determine pasted
testing ListConcat argument determine
testing ListConcat return nothing, it will run anyway, pased
testing ListFree argument determine
testing ListFree return nothing, it will run anyway, pased 
testing ListTrim argument determine
testing ListTrim argument determine pasted
parameterTest passed
ListCreate() test
ListCreate() test passed
ListCreate() test
due to the last test cannot test the situation, list != null && item == null, also, when current == null && item != null && list != null.
we will test it here.
test start: (we will use assert and if nothing's up, the test passes.) 
test passed.
we are testing add, append, insert, prepend randomly.
after each adding, the list will be printed: 
there are still some assert test to ensure the count field correctafter append, the list1 should be 1: 
The list constent is: 1 
after adding, the list1 should be 1 2: 
The list constent is: 1 2 
after inserting, the list1 should be 1 3 2: 
The list constent is: 1 3 2 
after preppend, the list1 should be 4 1 3 2: 
The list constent is: 4 1 3 2 
after adding, the list1 should be 4 5 1 3 2: 
The list constent is: 4 5 1 3 2 
after adding, the list1 should be 4 5 6 1 3 2: 
The list constent is: 4 5 6 1 3 2 
after adding, the list1 should be 4 5 6 7 1 3 2: 
The list constent is: 4 5 6 7 1 3 2 

after adding, the list2 should be 20 30 50: 
The list constent is: 20 30 50 

after adding with a loop,
the list2 should be 20 30 50 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88: 
The list constent is: 20 30 50 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 
tesing concatthere are still some assert test to ensure the count field correct
after concat,the list1 should be 4 5 6 7 1 3 2 20 30 50 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88: 
The list constent is: 4 5 6 7 1 3 2 20 30 50 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 
if we can print it correctly, it proved that the part of fields after adding does not have problems.adders tests all passeddue to the first test cannot test the situation, list != null && comarg == null || com == null, we will test it here.
test start: (we will use assert and if nothing's up, the test passes.) 
The list constent is: 1 2 3 4 5 6 7 
current item should be 7
first item should be 1
last item should be 7
pre item should be 6
current item is: 7
first item is: 1
last item is: 7
pre item is: 6
now, we are going to test search function in mover.
we will choose a non-special item in the list to test now.
we say 5
return value is 5.
passes an item not in the list test
return null, pass.
we will choose a special item in the list to test now.
we say 1, as the first item
return value is 1.
passes
we will choose a special item in the list to test now.
we say 7, as the last item
return value is 7.
passes
we will choose a special item in the list to test now.
we say 6, as the current item
return value is 6.
passes
mover tests passed.
start next one
The list constent is: 1 
now we are testing coner of situation, where list's count == 1
removed item shoud be 1
and it is: 1
now we are testing the situation, where list has several nodes in it
removed item shoud be 4
and it is: 4
removed item shoud be 3
and it is: 3
now the list should be: 2 5 6 7
The list constent is: 2 5 6 7 
calling listFree, the list constent should be nothing
remover tests passes.
now we start to detect the ability of memory increasing for node pool.
now the list should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 
now the list should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
now the list should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 57 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 57 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
node pool memory increasing test with 1 list passed.
the testlist should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
the testlist2 should be: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
The list constent is: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
the testlist should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
the testlist2 should be: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
The list constent is: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
the testlist should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
the testlist2 should be: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
The list constent is: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
node pool memory increasing test with 2 lists passed.
node pool memory increasing test passed.
list pool memory increasing test starts.
the testlist should be: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
The list constent is: 88 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 73 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
the testlist2 should be: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
The list constent is: 99 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
the testlist3 should be: 3 3 3 3 3 3 3 3 3 3 
The list constent is: 3 3 3 3 3 3 3 3 3 3 
the testlist4 should be: 4 4 4 4 4 4 4 4 4 4
The list constent is: 4 4 4 4 4 4 4 4 4 4 
the testlist5 should be: 53 53 53 53 53 53 53 53 53 53
The list constent is: 53 53 53 53 53 53 53 53 53 53 
the testlist6 should be: 69 69 69 69 69 69 69 69 69 69
The list constent is: 69 69 69 69 69 69 69 69 69 69 
the testlist7 should be: 73 73 73 73 73 73 73 73 73 73
The list constent is: 73 73 73 73 73 73 73 73 73 73 
the testlist8 should be: 1 1 1 1 1 1 1 1 1 1 
The list constent is: 1 1 1 1 1 1 1 1 1 1 
the testlist9 should be: 88 88 88 88 88 88 88 88 88 88 
The list constent is: 88 88 88 88 88 88 88 88 88 88 
the testlist10 should be: 99 99 99 99 99 99 99 99 99 99 
The list constent is: 99 99 99 99 99 99 99 99 99 99 
the testlist11 should be: 57 57 57 57 57 57 57 57 57 57 
The list constent is: 57 57 57 57 57 57 57 57 57 57 
the testlist12 should be: 1 1 1 1 1 1 1 1 1 1
The list constent is: 1 1 1 1 1 1 1 1 1 1 
list pool memory increasing test passes.
node pool memory decreasing test starts.
total nodes before deleting are: 800
the testlist2 should be: empty 
The list constent is: 
the testlist should be: empty 
The list constent is: 
total nodes after deleting should be 100
total nodes after deleting are: 100
the testlist3 should be: 3 3 3 3 3 3 3 3 3 3 
The list constent is: 3 3 3 3 3 3 3 3 3 3 
the testlist4 should be: 4 4 4 4 4 4 4 4 4 4
The list constent is: 4 4 4 4 4 4 4 4 4 4 
the testlist5 should be: 53 53 53 53 53 53 53 53 53 53
The list constent is: 53 53 53 53 53 53 53 53 53 53 
the testlist6 should be: 69 69 69 69 69 69 69 69 69 69
The list constent is: 69 69 69 69 69 69 69 69 69 69 
the testlist7 should be: 73 73 73 73 73 73 73 73 73 73
The list constent is: 73 73 73 73 73 73 73 73 73 73 
the testlist8 should be: 1 1 1 1 1 1 1 1 1 1 
The list constent is: 1 1 1 1 1 1 1 1 1 1 
the testlist9 should be: 88 88 88 88 88 88 88 88 88 88 
The list constent is: 88 88 88 88 88 88 88 88 88 88 
the testlist10 should be: 99 99 99 99 99 99 99 99 99 99 
The list constent is: 99 99 99 99 99 99 99 99 99 99 
the testlist11 should be: 57 57 57 57 57 57 57 57 57 57 
The list constent is: 57 57 57 57 57 57 57 57 57 57 
the testlist12 should be: 1 1 1 1 1 1 1 1 1 1
The list constent is: 1 1 1 1 1 1 1 1 1 1 
node pool memory decreasing test passes.
total_list is: 10
usedlist is: 9
total_list is: 10
usedlist is: 8
total_list is: 10
usedlist is: 7
total_list should be 10.
total_list is: 10
the testlist2 should be: empty 
The list constent is: 
the testlist should be: empty 
The list constent is: 
the testlist3 should be: 3 3 3 3 3 3 3 3 3 3 
The list constent is: 3 3 3 3 3 3 3 3 3 3 
the testlist4 should be: 4 4 4 4 4 4 4 4 4 4
The list constent is: 4 4 4 4 4 4 4 4 4 4 
the testlist5 should be: 53 53 53 53 53 53 53 53 53 53
The list constent is: 53 53 53 53 53 53 53 53 53 53 
the testlist6 should be: 69 69 69 69 69 69 69 69 69 69
The list constent is: 69 69 69 69 69 69 69 69 69 69 
the testlist7 should be: 73 73 73 73 73 73 73 73 73 73
The list constent is: 73 73 73 73 73 73 73 73 73 73 
the testlist8 should be: 1 1 1 1 1 1 1 1 1 1 
The list constent is: 1 1 1 1 1 1 1 1 1 1 
the testlist9 should be: 88 88 88 88 88 88 88 88 88 88 
The list constent is: 88 88 88 88 88 88 88 88 88 88 
all other function proved right duing before part.
other functions part past.
all tests finish.
